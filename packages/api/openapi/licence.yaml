openapi: 3.0.0
info:
  description: Wildlife Licencing API definition
  version: 1.0.0
  title: Wildlife Licencing
  contact:
    email: graham.willis@defra.gov.uk
  license:
    name: The Open Government Licence (OGL) Version 3
    url: www.nationalarchives.gov.uk/doc/open-government-licence/version/3
paths:
################################################################################################
# Users
################################################################################################
  '/user':
    post:
      description: Create and store user
      summary: Create a new user with a generated ID
      operationId: postUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
      responses:
        201:
          description: The user has been created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
        500:
          description: Unexpected error on server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  '/user/{userId}':
    get:
      description: Reterive a user
      summary: Reterive a user
      operationId: getUserByUserId
      parameters:
        - name: userId
          in: path
          description: ID of the appliciant
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
        400:
          description: Bad request. User ID must be a uuid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        404:
          description: An user with the specified ID was not found.
        500:
          description: Unexpected error on server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

    delete:
      description: Delete user
      summary:  Delete the user on the provided ID
      operationId: deleteUser
      parameters:
        - name: userId
          in: path
          description: ID of the user
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
      responses:
        204:
          description: The appliciant object has been deleted
        400:
          description: Bad request. user ID must be a uuid
        404:
          description: Not found
        409:
          description: Conflict
        500:
          description: Unexpected error on server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

################################################################################################
# Applications
################################################################################################
  '/user/{userId}/applications':
    get:
      description: Get the applications for a user
      summary: Get the applications for a user
      operationId: getApplicationsByUserId
      parameters:
        - name: userId
          in: path
          description: ID of the user
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/applications'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        404:
          description: Not found
        500:
          description: Unexpected error on server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  '/user/{userId}/application':
    post:
      description: Create a new application
      summary: Create a new application for an existing userId
      operationId: postApplication
      parameters:
        - name: userId
          in: path
          description: ID of the user
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/application'
      responses:
        201:
          description: The application object has been created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/application'
        400:
          description: Bad request. user ID must be a uuid
        404:
          description: Not found
        500:
          description: Unexpected error on server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  '/user/{userId}/application/{applicationId}':
    get:
      description: Get an application
      summary: Get an application
      operationId: getApplicationByApplicationId
      parameters:
        - name: userId
          in: path
          description: ID of the user
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
        - name: applicationId
          in: path
          description: ID of the application
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/application'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        404:
          description: Application not found
        500:
          description: Unexpected error on server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

    put:
      description: Update an application
      summary: Create or update an application for a given appilcationId and an existing userId
      operationId: putApplication
      parameters:
        - name: userId
          in: path
          description: ID of the user
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
        - name: applicationId
          in: path
          description: ID of the application
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/application'
      responses:
        200:
          description: The application object has been updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/application'
        201:
          description: The application object has been created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/application'
        400:
          description: Bad request. user ID must be a uuid
        404:
          description: Not found
        500:
          description: Unexpected error on server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

    delete:
      description: Delete an application
      summary: Delete an application
      operationId: deleteApplication
      parameters:
        - name: userId
          in: path
          description: ID of the user
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
        - name: applicationId
          in: path
          description: ID of the application
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
      responses:
        204:
          description: The application has been deleted
        400:
          description: Bad request
        404:
          description: Not found
        409:
          description: Conflict
        500:
          description: Unexpected error on server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

################################################################################################
# Eligibility
################################################################################################
  '/user/{userId}/application/{applicationId}/eligibility':
    put:
      description: Update the application eligibility details
      summary: Create or update the application eligibility details
      operationId: putApplicationEligibility
      parameters:
        - name: userId
          in: path
          description: ID of the user
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
        - name: applicationId
          in: path
          description: ID of the application
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/eligibility'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/eligibility'
        400:
          description: Bad request
        404:
          description: Not found
        500:
          description: Unexpected error on server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

    get:
      description: Get the application eligibility details
      summary: Get the eligibility details for an application
      operationId: getApplicationEligibility
      parameters:
        - name: userId
          in: path
          description: ID of the user
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
        - name: applicationId
          in: path
          description: ID of the application
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/eligibility'
        400:
          description: Bad request
        404:
          description: Not found
        500:
          description: Unexpected error on server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

    delete:
      description: Delete the application eligibility details
      summary: Delete the eligibility details for an application
      operationId: deleteApplicationEligibility
      parameters:
        - name: userId
          in: path
          description: ID of the user
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
        - name: applicationId
          in: path
          description: ID of the application
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
      responses:
        204:
          description: Success
        400:
          description: Bad request
        404:
          description: Not found
        500:
          description: Unexpected error on server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

################################################################################################
# Applicants
################################################################################################
  '/user/{userId}/application/{applicationId}/applicant':
    put:
      description: Update the application applicant details
      summary: Create or update the application applicant details
      operationId: putApplicationApplicant
      parameters:
        - name: userId
          in: path
          description: ID of the user
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
        - name: applicationId
          in: path
          description: ID of the application
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/contact'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/contact'
        400:
          description: Bad request
        404:
          description: Not found
        500:
          description: Unexpected error on server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

    get:
      description: Get the application applicant details
      summary: Get the applicant details for an application
      operationId: getApplicationApplicant
      parameters:
        - name: userId
          in: path
          description: ID of the user
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
        - name: applicationId
          in: path
          description: ID of the application
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/contact'
        400:
          description: Bad request
        404:
          description: Not found
        500:
          description: Unexpected error on server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

    delete:
      description: Delete the application applicant details
      summary: Delete the applicant details for an application
      operationId: deleteApplicationApplicant
      parameters:
        - name: userId
          in: path
          description: ID of the user
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
        - name: applicationId
          in: path
          description: ID of the application
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
      responses:
        204:
          description: Success
        400:
          description: Bad request
        404:
          description: Not found
        500:
          description: Unexpected error on server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

################################################################################################
# Ecologists / Agent
################################################################################################
  '/user/{userId}/application/{applicationId}/ecologist':
    put:
      description: Update the application ecologist details
      summary: Create or update the application ecologist details
      operationId: putApplicationEcologist
      parameters:
        - name: userId
          in: path
          description: ID of the user
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
        - name: applicationId
          in: path
          description: ID of the application
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/contact'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/contact'
        400:
          description: Bad request
        404:
          description: Not found
        500:
          description: Unexpected error on server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

    get:
      description: Get the application ecologist details
      summary: Get the ecologist details for an application
      operationId: getApplicationEcologist
      parameters:
        - name: userId
          in: path
          description: ID of the user
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
        - name: applicationId
          in: path
          description: ID of the application
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/contact'
        400:
          description: Bad request
        404:
          description: Not found
        500:
          description: Unexpected error on server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

    delete:
      description: Delete the application ecologist details
      summary: Delete the ecologist details for an application
      operationId: deleteApplicationEcologist
      parameters:
        - name: userId
          in: path
          description: ID of the user
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
        - name: applicationId
          in: path
          description: ID of the application
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
      responses:
        204:
          description: Success
        400:
          description: Bad request
        404:
          description: Not found
        500:
          description: Unexpected error on server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

################################################################################################
# Sites
################################################################################################
  '/user/{userId}/sites':
    get:
      description: Get the sites for a user
      summary: Get the sites for a user
      operationId: getSitesByUserId
      parameters:
        - name: userId
          in: path
          description: ID of the user
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sites'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        404:
          description: Not found
        500:
          description: Unexpected error on server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  '/user/{userId}/site':
    post:
      description: Create a new site
      summary: Create a new site for an existing userId
      operationId: postSite
      parameters:
        - name: userId
          in: path
          description: ID of the user
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/site'
      responses:
        201:
          description: The application object has been created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/site'
        400:
          description: Bad request. user ID must be a uuid
        404:
          description: Not found
        500:
          description: Unexpected error on server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  '/user/{userId}/site/{siteId}':
    get:
      description: Get a site
      summary: Get a site
      operationId: getSiteBySiteId
      parameters:
        - name: userId
          in: path
          description: ID of the user
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
        - name: siteId
          in: path
          description: ID of the site
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/site'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        404:
          description: Site not found
        500:
          description: Unexpected error on server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

    put:
      description: Create a new site or update an existing site
      summary: Create a new site or update an existing site
      operationId: putSite
      parameters:
        - name: userId
          in: path
          description: ID of the user
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
        - name: siteId
          in: path
          description: ID of the site
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
      responses:
        200:
          description: The site object has been updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/site'
        201:
          description: The site object has been created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/site'
        400:
          description: Bad request. user ID must be a uuid
        404:
          description: Not found
        500:
          description: Unexpected error on server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

    delete:
      description: Delete a site
      summary: Delete a site
      operationId: deleteSite
      parameters:
        - name: userId
          in: path
          description: ID of the site
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
        - name: siteId
          in: path
          description: ID of the site
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
      responses:
        204:
          description: The site has been deleted
        400:
          description: Bad request
        404:
          description: Not found
        409:
          description: Conflict
        500:
          description: Unexpected error on server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

################################################################################################
# Application Sites
################################################################################################
  '/user/{userId}/application-site':
    post:
      description: Create a new application-site relationship
      summary: Create a new application-site relationship for an existing userId, applicationId and SiteId
      operationId: postApplicationSite
      parameters:
        - name: userId
          in: path
          description: ID of the user
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/applicationSite'
      responses:
        201:
          description: The application-site object has been created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/applicationSite'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        404:
          description: Not found
        409:
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        500:
          description: Unexpected error on server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  '/user/{userId}/application-sites':
    get:
      description: Get the application-sites
      summary: Get a list of application-site relationships for a user
      operationId: getApplicationSitesByUserId
      parameters:
        - name: userId
          in: path
          description: ID of the user
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/applicationSites'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        404:
          description: Not found
        500:
          description: Unexpected error on server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  '/user/{userId}/application-site/{applicationSiteId}':
    get:
      description: Get an application-site by id
      summary:  Get an application-site by id
      operationId: getApplicationSiteByApplicationSiteId
      parameters:
        - name: userId
          in: path
          description: ID of the user
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
        - name: applicationSiteId
          in: path
          description: ID of the application-site
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/applicationSite'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        404:
          description: The application-site is not found
        500:
          description: Unexpected error on server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

    delete:
      description: Delete an application-site by id
      summary:  Get an application-site by id
      operationId: deleteApplicationSiteByApplicationSiteId
      parameters:
        - name: userId
          in: path
          description: ID of the user
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
        - name: applicationSiteId
          in: path
          description: ID of the application-site
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
      responses:
        204:
          description: The application-site has been deleted
        400:
          description: Bad request
        404:
          description: The application-site is not found
        500:
          description: Unexpected error on server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

################################################################################################
# Submission
################################################################################################
  '/user/{userId}/application/{applicationId}/submit':
    post:
      description: Queue the application for submission
      summary: Queue the application for submission
      operationId: postApplicationSubmit
      parameters:
        - name: userId
          in: path
          description: ID of the user
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
        - name: applicationId
          in: path
          description: ID of the application
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
      responses:
        204:
          description: Success
        400:
          description: Bad request
        404:
          description: Not found
        500:
          description: Unexpected error on server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

################################################################################################
# Reference Data
################################################################################################
  '/application/types':
    get:
      description: Get the application types
      summary: The licence type requested by an application
      operationId: getApplicationTypes
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/referenceDataTypes'

        404:
          description: Not found
        500:
          description: Unexpected error on server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  '/application/purposes':
    get:
      description: Get the application purposes
      summary: The purpose of an application
      operationId: getApplicationPurposes
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/referenceDataTypes'
        404:
          description: Not found
        500:
          description: Unexpected error on server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

################################################################################################
# Option sets
################################################################################################
  '/option-sets':
    get:
      description: Get the global option set values
      summary: Get the global option set values
      operationId: getOptionSets
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/optionSetTypes'
        404:
          description: Not found
        500:
          description: Unexpected error on server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'


components:
################################################################################################
# Schemas
################################################################################################
  schemas:
    user:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/uuid'
        createdAt:
          $ref: '#/components/schemas/timestamp'
        updatedAt:
          $ref: '#/components/schemas/timestamp'

    applications:
      type: array
      items:
        $ref: '#/components/schemas/application'

    application:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/uuid'
        proposalDescription:
          type: string
          minLength: 1
          maxLength: 300
        detailsOfConvictions:
          type: string
          minLength: 1
          maxLength: 300
        licenceReason:
          type: string
          minLength: 1
          maxLength: 300
        applicationCategory:
          type: number
        applicationType:
          type: string
          minLength: 1
          maxLength: 300
        applicationPurpose:
          type: string
          minLength: 1
          maxLength: 300
        eligibility:
          $ref: '#/components/schemas/eligibility'
        applicant:
          $ref: '#/components/schemas/contact'
        ecologist:
          $ref: '#/components/schemas/contact'
        submitted:
          $ref: '#/components/schemas/timestamp'
        createdAt:
          $ref: '#/components/schemas/timestamp'
        updatedAt:
          $ref: '#/components/schemas/timestamp'

    eligibility:
      type: object
      properties:
        isOwnerOfLand:
          type: boolean
        hasLandOwnerPermission:
          type: boolean
        permissionsRequired:
          type: boolean
        permissionsGranted:
          type: boolean

    referenceDataTypes:
      type: array
      items:
        $ref: '#/components/schemas/referenceDataType'

    referenceDataType:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/uuid'
        name:
          type: string
        description:
          type: string
          nullable: true
        createdAt:
          $ref: '#/components/schemas/timestamp'
        updatedAt:
          $ref: '#/components/schemas/timestamp'

    optionSetTypes:
      type: object
      additionalProperties:
        type: object
        items:
          $ref: '#/components/schemas/optionSetType'

    optionSetType:
      type: object
      additionalProperties: false
      properties:
        values:
          type: array
          items:
            $ref: '#/components/schemas/objectSet'
        createdAt:
          $ref: '#/components/schemas/timestamp'
        updatedAt:
          $ref: '#/components/schemas/timestamp'

    objectSet:
      type: object
      properties:
        value:
          type: number
        description:
          type: string

    contactDetails:
      type: object
      properties:
        email:
          $ref: '#/components/schemas/email'
        phone:
          $ref: '#/components/schemas/phone'

    contact:
      type: object
      properties:
        firstname:
          type: string
          minLength: 1
          maxLength: 36
        lastname:
          type: string
          minLength: 1
          maxLength: 36
        contactDetails:
          $ref: '#/components/schemas/contactDetails'
        address:
          $ref: '#/components/schemas/address'
        organization:
          $ref: '#/components/schemas/organization'

    organization:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 36
        contactDetails:
          $ref: '#/components/schemas/contactDetails'
        address:
          $ref: '#/components/schemas/address'

    address:
      type: object
      properties:
        houseNumber:
          type: string
          minLength: 1
          maxLength: 36
        addrline1:
          type: string
          minLength: 1
          maxLength: 36
        addrline2:
          type: string
          minLength: 1
          maxLength: 36
        addrline3:
          type: string
          minLength: 1
          maxLength: 36
        county:
          type: string
          minLength: 1
          maxLength: 36
        town:
          type: string
          minLength: 1
          maxLength: 36
        postcode:
          type: string
          minLength: 1
          maxLength: 10

    sites:
      type: array
      items:
        $ref: '#/components/schemas/site'

    site:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/uuid'
        name:
          type: string
          minLength: 1
          maxLength: 36
        address:
          $ref: '#/components/schemas/address'
        gridReference:
          $ref: '#/components/schemas/gridReference'
        createdAt:
          $ref: '#/components/schemas/timestamp'
        updatedAt:
          $ref: '#/components/schemas/timestamp'

    applicationSites:
      type: array
      items:
        $ref: '#/components/schemas/applicationSite'

    applicationSite:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/uuid'
        applicationId:
          $ref: '#/components/schemas/uuid'
        siteId:
          $ref: '#/components/schemas/uuid'
        createdAt:
          $ref: '#/components/schemas/timestamp'
        updatedAt:
          $ref: '#/components/schemas/timestamp'

    gridReference:
      type: string

    timestamp:
      type: string
      readOnly: true
      example: 2021-12-06T15:56:46.825Z
      pattern: ^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\.[0-9]{3}Z$

    uuid:
      type: string
      pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
      example: 5e790ab3-c37a-4e4c-a19d-97fb72cdbd42
      minLength: 36
      maxLength: 36

    email:
      type: string
      pattern: (?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])
      example: email@email.com

    phone:
      type: string

    error:
      type: object
      required:
        - code
      properties:
        code:
          type: number
        error:
          type: object
        errors:
          type: array
          items:
            type: object

